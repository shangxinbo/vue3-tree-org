{"version":3,"sources":["webpack://vue3-tree-org/src/components/tree-org/src/D:/code/vue3-tree-org/src/components/tree-org/src/tree.vue"],"names":[],"mappings":"AA0KA,oDACE,YACF","file":"vue3-tree-org.css","sourcesContent":["<template>\r\n  <div ref=\"eleRef\" class=\"zm-tree-org\">\r\n    <div\r\n      ref=\"zoomRef\"\r\n      class=\"zoom-container\"\r\n      :class=\"{'is-center': center && !horizontal}\"\r\n      :style=\"zoomStyle\"\r\n      @wheel=\"zoomWheel\"\r\n    >\r\n      <Draggable\r\n        :x=\"left\"\r\n        :y=\"top\"\r\n        :class=\"{ dragging: autoDragging }\"\r\n        @dragging=\"onDrag\"\r\n        @dragstop=\"onDragStop\"\r\n        :draggable=\"draggable\"\r\n        :drag-cancel=\"dragCancel\"\r\n      >\r\n        <div\r\n          ref=\"treeRef\"\r\n          class=\"tree-org\"\r\n          :class=\"{ horizontal, collapsable }\"\r\n        >\r\n          <tree-org-node\r\n            :data=\"treeData\"\r\n            :props=\"keys\"\r\n            :lazy=\"lazy\"\r\n            :suffix=\"suffix\"\r\n            :horizontal=\"horizontal\"\r\n            :labelStyle=\"labelStyle\"\r\n            :collapsable=\"collapsable\"\r\n            :renderContent=\"renderContent\"\r\n            :selectedKey=\"selectedKey\"\r\n            :defaultExpandLevel=\"defaultExpandLevel\"\r\n            :selectedClassName=\"selectedClassName\"\r\n            :labelClassName=\"labelClassName\"\r\n            :vNodedrag=\"nodeargs\"\r\n            @on-expand=\"handleExpand\"\r\n            @node-click=\"handleClick\"\r\n            @node-dblclick=\"handleDblclick\"\r\n            @node-mouseenter=\"nodeMouseenter\"\r\n            @node-mouseleave=\"nodeMouseleave\"\r\n            @node-contextmenu=\"nodeContextmenu\"\r\n            @node-focus=\"handleFocus\"\r\n            @node-blur=\"handleBlur\"\r\n          >\r\n          <template v-if=\"defaultSlot\" v-slot:default=\"{node}\">\r\n            <slot :node=\"node\">\r\n              <div class=\"tree-org-node__text\">\r\n                <span>{{ node.label }}</span>\r\n              </div>\r\n            </slot>\r\n          </template>\r\n          <template v-if=\"expandSlot\" v-slot:expand=\"{node}\">\r\n            <slot name=\"expand\" :node=\"node\">\r\n              <span class=\"tree-org-node__expand-btn\"></span>\r\n            </slot>\r\n          </template>\r\n          </tree-org-node>\r\n        </div>\r\n      </Draggable>\r\n    </div>\r\n    <Tools\r\n      v-if=\"tools.visible\"\r\n      :tools=\"tools.data\"\r\n      :scale=\"zoomPercent\"\r\n      @on-expand=\"expandChange\"\r\n      @on-scale=\"zoomOrgchart\"\r\n      @on-restore=\"restoreOrgchart\"\r\n      @on-fullscreen=\"handleFullscreen\" />\r\n    <clone-org\r\n      v-if=\"nodeDraggable\"\r\n      v-model=\"nodeMoving\"\r\n      :props=\"keys\"\r\n      :data=\"cloneData\"\r\n      :horizontal=\"horizontal\"\r\n      :label-style=\"labelStyle\"\r\n      :collapsable=\"collapsable\"\r\n      :render-content=\"renderContent\"\r\n      :label-class-name=\"labelClassName\"\r\n    >\r\n      <template v-if=\"defaultSlot\" v-slot:default=\"{node}\">\r\n        <slot :node=\"node\">\r\n          <div class=\"tree-org-node__text\">\r\n            <span>{{ node[keys.label] }}</span>\r\n          </div>\r\n        </slot>\r\n      </template>\r\n      <template v-if=\"expandSlot\" v-slot:expand=\"{node}\">\r\n        <slot name=\"expand\" :node=\"node\">\r\n          <span class=\"tree-org-node__expand-btn\"></span>\r\n        </slot>\r\n      </template>\r\n    </clone-org>\r\n    <Contextmenu\r\n      v-if=\"nodeMenus.length\"\r\n      v-model=\"contextmenu\"\r\n      :x=\"menuX\"\r\n      :y=\"menuY\"\r\n      :node=\"menuData\"\r\n      :data=\"data\"\r\n      :props=\"keys\"\r\n      :menus=\"nodeMenus\"\r\n      :disabled=\"disabled\"\r\n      :node-add=\"nodeAdd\"\r\n      :node-delete=\"nodeDelete\"\r\n      :node-edit=\"nodeEdit\"\r\n      :node-copy=\"nodeCopy\"\r\n      @contextmenu=\"\r\n        (arg) => {\r\n          $emit('on-contextmenu', arg);\r\n        }\r\n      \"\r\n      @on-node-copy=\"\r\n        (txt) => {\r\n          $emit('on-node-copy', txt);\r\n        }\r\n      \"\r\n      @on-node-delete=\"\r\n        (txt) => {\r\n          $emit('on-node-delete', txt);\r\n        }\r\n      \"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue'\r\nimport TreeOrgNode from '@/components/node'\r\nimport Tools from '@/components/tools'\r\nimport Draggable from '@/components/draggable'\r\nimport CloneOrg from '@/components/clone-org'\r\nimport Contextmenu from '@/components/contextmenu'\r\nimport drag from '@/directives/drag'\r\nimport { treeProps, treeEmits } from './tree'\r\nimport { useTree } from './use-tree'\r\nexport default defineComponent({\r\n  name: 'vue3TreeOrg',\r\n  components: {\r\n    Tools,\r\n    CloneOrg,\r\n    Draggable,\r\n    Contextmenu,\r\n    TreeOrgNode\r\n  },\r\n  directives: {\r\n    nodedrag: drag\r\n  },\r\n  props: treeProps,\r\n  emits: treeEmits,\r\n  setup (props, ctx) {\r\n    const defaultSlot = !!ctx.slots.default\r\n    const expandSlot = !!ctx.slots.expand\r\n    const eleRef = ref<HTMLElement>()\r\n    const treeRef = ref<HTMLElement>()\r\n    const zoomRef = ref<HTMLElement>()\r\n    const treeOrg = useTree(props, ctx, { eleRef, treeRef, zoomRef })\r\n    return {\r\n      eleRef,\r\n      treeRef,\r\n      zoomRef,\r\n      defaultSlot,\r\n      expandSlot,\r\n      ...treeOrg\r\n    }\r\n  }\r\n})\r\n</script>\r\n<style scoped>\r\n.zoom-container::-webkit-scrollbar{\r\n  display: none;\r\n}\r\n</style>\r\n"]}